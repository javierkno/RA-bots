#ifndef PATHFINDING_H
#define	PATHFINDING_H

#include <vector>
#include <math.h>
#include <iostream>
#include <algorithm>

using namespace std;

//Constantes

const int TAM = 21;
const int MINX = 0;
const int MINY = 0;
const int MAXX = TAM;
const int MAXY= TAM;

const int map1[TAM][TAM] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                            {1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1},
                            {1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1},
                            {1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1},
                            {1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1},
                            {1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1},
                            {1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1},
                            {1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};

const int map2[TAM][TAM] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                            {1,0,1,1,0,1,1,0,0,0,0,0,1,1,0,0,1,0,0,0,1},
                            {1,0,1,1,0,1,1,0,0,0,0,0,1,1,0,0,1,0,0,0,1},
                            {1,0,1,1,0,1,1,0,0,0,0,0,1,1,0,0,1,0,0,0,1},
                            {1,0,1,1,0,1,1,1,1,1,0,0,1,1,0,0,1,0,0,0,1},
                            {1,0,1,1,0,1,1,1,1,1,0,0,1,1,0,0,1,0,0,0,1},
                            {1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1},
                            {1,0,1,1,0,1,1,0,1,1,1,1,1,0,0,0,1,0,0,0,1},
                            {1,0,1,1,0,1,1,0,1,1,1,1,1,0,0,0,1,0,0,0,1},
                            {1,0,1,1,0,1,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1},
                            {1,0,1,1,0,1,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1},
                            {1,0,1,1,0,1,1,0,0,0,0,1,1,0,0,0,1,0,0,0,1},
                            {1,0,1,1,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,1},
                            {1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1},
                            {1,0,1,1,0,1,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1},
                            {1,0,1,1,0,1,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1},
                            {1,0,1,1,0,1,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1},
                            {1,0,1,1,0,1,1,0,0,0,0,1,1,0,0,0,1,1,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};

const int map3[TAM][TAM] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                            {1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1},
                            {1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1},
                            {1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1},
                            {1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1},
                            {1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1},
                            {1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1},
                            {1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};

const int map4[TAM][TAM] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                            {1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1},
                            {1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1},
                            {1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1},
                            {1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1},
                            {1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1},
                            {1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1},
                            {1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};

//Clases

class TNode {
    
private:
    
    int x;
    int y;
      
    double f;
    double g;
    double h;
    
    TNode * padre;
    
public:
    
    void SetF(double n) {f=n;};
    void SetG(double n) {g=n;};
    void SetH(double n) {h=n;};
    void SetPadre(TNode*n) {padre=n;};
    
    int GetX() const {return x;};
    int GetY() const {return y;};
    double GetF() const {return f;};
    double GetG() const {return g;};
    double GetH() const {return h;};
    TNode* GetPadre() const {return padre;};
    
    TNode() {
        f=0;
        g=0;
        h=0;
        padre = NULL;
    }
    
    TNode(int a, int b) {x=a;y=b;}

};

class Node {
public:
    int x;
    int y;   
    Node(){}
    Node(TNode *n) {
        x=n->GetY()-10;
        y=10-n->GetX();
    }
    Node(int x0, int y0) {
        x=x0;
        y=y0;
    }
};

class Pathfinding {
    
private:
        
    //Variables privadas
    const int (*world)[TAM];
    int probMap[4];
    int probs;
    
    //Métodos privados  
    vector<TNode*> GetChild(TNode* n, bool cl[][TAM]);
    double AdjCost(TNode* n, TNode* m);
    double CalcH(TNode* n, TNode* m);
    int Search(TNode* n, vector<TNode*> v);
    void Init();
    
public:
    
    Pathfinding();
    
    vector<Node*> Astar(int startx, int starty, int goalx, int goaly);
    
    //Métodos para cargar el mapa
    int CalcProb(int x, int y, double dist, double angle);
    void LoadMap();

    //No usar
    void CargarMapa(const int n[][TAM]);
};

double AngleTo(double robot_x, double robot_y, double angle, double to_x, double to_y);

#endif	/* PATHFINDING_H */

